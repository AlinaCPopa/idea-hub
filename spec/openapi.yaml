openapi: 3.1.0
info:
  title: IdeaHub API
  version: 0.1.0
  description: >-
    Spec-first contract for the IdeaHub application. Demonstrates
    authentication, user management, and idea CRUD with like functionality.
servers:
  - url: http://localhost:8000
paths:
  /health:
    get:
      summary: Health check
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
  /auth/login:
    post:
      summary: Login to obtain JWT
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Invalid credentials
  /users:
    get:
      summary: List users
      operationId: listUsers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /ideas:
    get:
      summary: List ideas
      operationId: listIdeas
      responses:
        '200':
          description: Idea list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Idea'
    post:
      summary: Create idea
      operationId: createIdea
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdeaCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idea'
  /ideas/{ideaId}/like:
    post:
      summary: Like an idea
      operationId: likeIdea
      security:
        - bearerAuth: []
      parameters:
        - name: ideaId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Liked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Idea'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserBase:
      type: object
      properties:
        username:
          type: string
    UserCreate:
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - type: object
          required: [password]
          properties:
            password:
              type: string
    User:
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - type: object
          properties:
            id:
              type: integer
            created_at:
              type: string
              format: date-time
    IdeaBase:
      type: object
      required: [title]
      properties:
        title:
          type: string
        description:
          type: string
    IdeaCreate:
      allOf:
        - $ref: '#/components/schemas/IdeaBase'
    Idea:
      allOf:
        - $ref: '#/components/schemas/IdeaBase'
        - type: object
          properties:
            id:
              type: integer
            owner_id:
              type: integer
            likes:
              type: integer
            created_at:
              type: string
              format: date-time
